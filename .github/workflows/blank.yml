# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up jdk 21
        uses: actions/setup-java@v3
        with: 
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      
      # Making gradlew file executable for upcomming steps
      - name: Grant execute permission
        run: chmod +x gradlew

      # Create required file
      - name: Create properties file
        run: |
          cat >> secret.properties << 'END'
          GOOGLE_API_KEY=${{ secrets.GOOGLEAPI }}
          IP_GEOLOCATION_API_KEY=${{ secrets.IPGEOAPI }}
          END
      
      # Cleaning project
      - name: Clean project
        run: ./gradlew clean

      # Performing lint checks  
      - name: Lint project
        run: ./gradlew lint

      # Starting gradle build  
      - name: Build gradle
        run: ./gradlew build
        
  unit-test: 
    
    runs-on: ubuntu-latest
    
    steps:

      - name: Load project
        uses: actions/checkout@v4

      - name: Setup Jdk 21
        uses: actions/setup-java@v3
        with: 
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Create required file
      - name: Create properties file
        run: |
          cat >> secret.properties << 'END'
          GOOGLE_API_KEY=${{ secrets.GOOGLEAPI }}
          IP_GEOLOCATION_API_KEY=${{ secrets.IPGEOAPI }}
          END

      - run: chmod +rwx gradlew

      - name: Run local unit tests
        run: ./gradlew test

  instrumentation-test:
    
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: Set up jdk 21
        uses: actions/setup-java@v3
        with: 
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Create required file
      - name: Create properties file
        run: |
          cat >> secret.properties << 'END'
          GOOGLE_API_KEY=${{ secrets.GOOGLEAPI }}
          IP_GEOLOCATION_API_KEY=${{ secrets.IPGEOAPI }}
          END
      
      - name: Change gradlew file permission
        run: chmod +x gradlew

      - name: Build project
        run: ./gradlew build

      - name: Create script
        run: |
          cat >> temp.sh << 'END'
          telnet localhost 5552
          echo "" | cat >> ~/.emulator_console_auth_token
          geo fix 66 77
          exit
          ./gradlew app:connectedCheck
          ./gradlew di:connectedCheck
          ./gradlew presentation:connectedCheck
          END
          chmod +x temp.sh

      - name: Run emulator
        uses: reactivecircus/android-emulator-runner@v2.30.1
        with:
          api-level: 29
          script: ./temp.sh
